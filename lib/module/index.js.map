{"version":3,"names":["React","requireNativeComponent","UIManager","findNodeHandle","Platform","ComponentName","ReactNativeUnityView","UnityView","Component","constructor","props","postMessage","gameObject","methodName","message","dispatchViewManagerCommand","getCommand","unloadUnity","pauseUnity","pause","resumeUnity","cmd","OS","getViewManagerConfig","Commands","getProps","componentWillUnmount","render"],"sources":["index.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  requireNativeComponent,\n  UIManager,\n  findNodeHandle,\n  Platform,\n  NativeSyntheticEvent,\n  ViewStyle,\n} from 'react-native';\n\ninterface UnityMessage {\n  message: string;\n}\n\ntype ReactNativeUnityViewProps = {\n  androidKeepPlayerMounted?: boolean;\n  fullScreen?: boolean;\n  onUnityMessage?: (event: NativeSyntheticEvent<UnityMessage>) => void;\n  onPlayerUnload?: (event: NativeSyntheticEvent<void>) => void;\n  onPlayerQuit?: (event: NativeSyntheticEvent<void>) => void;\n  style?: ViewStyle;\n};\n\nconst ComponentName = 'ReactNativeUnityView';\n\nconst ReactNativeUnityView =\n  requireNativeComponent<ReactNativeUnityViewProps>(ComponentName);\n\nexport default class UnityView extends React.Component<ReactNativeUnityViewProps> {\n  static defaultProps = {};\n\n  constructor(props: ReactNativeUnityViewProps) {\n    super(props);\n  }\n\n  public postMessage(gameObject: string, methodName: string, message: string) {\n    UIManager.dispatchViewManagerCommand(\n      findNodeHandle(this),\n      this.getCommand('postMessage'),\n      [gameObject, methodName, message]\n    );\n  }\n\n  public unloadUnity() {\n    UIManager.dispatchViewManagerCommand(\n      findNodeHandle(this),\n      this.getCommand('unloadUnity'),\n      []\n    );\n  }\n\n  public pauseUnity(pause: boolean) {\n    UIManager.dispatchViewManagerCommand(\n      findNodeHandle(this),\n      this.getCommand('pauseUnity'),\n      [pause]\n    );\n  }\n\n  public resumeUnity() {\n    UIManager.dispatchViewManagerCommand(\n      findNodeHandle(this),\n      this.getCommand('resumeUnity'),\n      []\n    );\n  }\n\n  private getCommand(cmd: string): any {\n    if (Platform.OS === 'ios') {\n      return UIManager.getViewManagerConfig('ReactNativeUnityView').Commands[\n        cmd\n      ];\n    } else {\n      return cmd;\n    }\n  }\n\n  private getProps() {\n    return {\n      ...this.props,\n    };\n  }\n\n  public componentWillUnmount() {\n    this.unloadUnity();\n  }\n\n  public render() {\n    return <ReactNativeUnityView {...this.getProps()} />;\n  }\n}\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,sBADF,EAEEC,SAFF,EAGEC,cAHF,EAIEC,QAJF,QAOO,cAPP;AAsBA,MAAMC,aAAa,GAAG,sBAAtB;AAEA,MAAMC,oBAAoB,GACxBL,sBAAsB,CAA4BI,aAA5B,CADxB;AAGA,eAAe,MAAME,SAAN,SAAwBP,KAAK,CAACQ,SAA9B,CAAmE;EAGhFC,WAAW,CAACC,KAAD,EAAmC;IAC5C,MAAMA,KAAN;EACD;;EAEMC,WAAW,CAACC,UAAD,EAAqBC,UAArB,EAAyCC,OAAzC,EAA0D;IAC1EZ,SAAS,CAACa,0BAAV,CACEZ,cAAc,CAAC,IAAD,CADhB,EAEE,KAAKa,UAAL,CAAgB,aAAhB,CAFF,EAGE,CAACJ,UAAD,EAAaC,UAAb,EAAyBC,OAAzB,CAHF;EAKD;;EAEMG,WAAW,GAAG;IACnBf,SAAS,CAACa,0BAAV,CACEZ,cAAc,CAAC,IAAD,CADhB,EAEE,KAAKa,UAAL,CAAgB,aAAhB,CAFF,EAGE,EAHF;EAKD;;EAEME,UAAU,CAACC,KAAD,EAAiB;IAChCjB,SAAS,CAACa,0BAAV,CACEZ,cAAc,CAAC,IAAD,CADhB,EAEE,KAAKa,UAAL,CAAgB,YAAhB,CAFF,EAGE,CAACG,KAAD,CAHF;EAKD;;EAEMC,WAAW,GAAG;IACnBlB,SAAS,CAACa,0BAAV,CACEZ,cAAc,CAAC,IAAD,CADhB,EAEE,KAAKa,UAAL,CAAgB,aAAhB,CAFF,EAGE,EAHF;EAKD;;EAEOA,UAAU,CAACK,GAAD,EAAmB;IACnC,IAAIjB,QAAQ,CAACkB,EAAT,KAAgB,KAApB,EAA2B;MACzB,OAAOpB,SAAS,CAACqB,oBAAV,CAA+B,sBAA/B,EAAuDC,QAAvD,CACLH,GADK,CAAP;IAGD,CAJD,MAIO;MACL,OAAOA,GAAP;IACD;EACF;;EAEOI,QAAQ,GAAG;IACjB,OAAO,EACL,GAAG,KAAKf;IADH,CAAP;EAGD;;EAEMgB,oBAAoB,GAAG;IAC5B,KAAKT,WAAL;EACD;;EAEMU,MAAM,GAAG;IACd,oBAAO,oBAAC,oBAAD,EAA0B,KAAKF,QAAL,EAA1B,CAAP;EACD;;AA7D+E;;gBAA7DlB,S,kBACG,E"}